package com.elaon.controller;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Logger;

import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.propertyeditors.StringTrimmerEditor;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.elaon.dao.LoanStatusRepository;
import com.elaon.entity.LoanAmortization;
import com.elaon.entity.LoanStatus;
import com.elaon.model.AcceptLoan;
import com.elaon.model.Amortization;
import com.elaon.model.SmsRequest;
import com.elaon.service.LoanAcceptanceService;
import com.elaon.service.MailMessageSender;
import com.elaon.service.Service;

@Controller
@RequestMapping("/manager")
public class ManagerController {

	private final Service smsService;

	@Autowired
	public ManagerController(Service SmsService) {
		super();
		this.smsService = SmsService;
	}

	@Autowired
	LoanStatusRepository lsRepo;
	
	@Autowired
	MailMessageSender mailSender;

	@Autowired
	LoanAcceptanceService loanAcceptService;

	private Logger logger = Logger.getLogger(getClass().getName());

	@InitBinder
	public void initBinder(WebDataBinder dataBinder) {

		StringTrimmerEditor stringTrimmerEditor = new StringTrimmerEditor(true);

		dataBinder.registerCustomEditor(String.class, stringTrimmerEditor);

	}

	@GetMapping("/seePendingList")
	public String pendingLoanApprovalList(Model model) {

		List<LoanStatus> listLoan = lsRepo.getLoanStatusByApprovalStatus("Pending");
		logger.info("Show all Pending Loans");

		model.addAttribute("listPendingLoan", listLoan);

		return "pending-loan-approval";
	}

	@GetMapping("/detailView")
	public String showDetailedLoanApplication(@RequestParam String id, Model model, HttpSession session) {

		Long statusId = Long.parseLong(id);
		LoanStatus ls = (LoanStatus) lsRepo.findById(statusId).get();
		session.setAttribute("ls", ls);

		System.out.println();
		System.out.println("Detailed View");
		System.out.println();
		System.out.println(ls);
		System.out.println();

		model.addAttribute("loanDetails", ls);
		logger.info("Showing detailed of loan application with Status Id = " + statusId + " Loan Id = "
				+ ls.getLoan().getLoanId());

		return "detailed-loan-application";

	}

	@GetMapping("/approveLoan")
	public String approvePendingLoan(@RequestParam String id, Model model, HttpSession session) {

		Long statusId = Long.parseLong(id);
		LoanStatus ls = (LoanStatus) lsRepo.findById(statusId).get();
		session.setAttribute("ls", ls);
		System.out.println("In Approve Loan");

		DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
		Date dateobj = new Date();
		String d = df.format(dateobj);

		logger.info(
				"Approved loan application with Status Id = " + statusId + " Loan Id = " + ls.getLoan().getLoanId());
		logger.info("Showing Loan Acceptance page of loan Id = " + ls.getLoan().getLoanId());

		model.addAttribute("d", d);
		model.addAttribute("loanStatus", ls);
		model.addAttribute("lAcc", new AcceptLoan());

		return "loan-acceptance-page";
	}

	@RequestMapping("/processLoanAcceptance")
	public String loanAcceptance(@Valid @ModelAttribute("lAcc") AcceptLoan lAcc, BindingResult result, Model model,
			HttpSession session) {

		if (result.hasErrors()) {

			return "loan-acceptance-page";
		}
		System.out.println("In process Loan Acceptance");
		LoanStatus ls = (LoanStatus) session.getAttribute("ls");
		Long amt = ls.getLoan().getLoanAmount();
		System.out.println(lAcc.getRegOffice());
		session.setAttribute("ac", lAcc);
		model.addAttribute("loanAmt", amt);
		model.addAttribute("loanAmor", new Amortization());
		return "loan-amortization";

	}

	@PostMapping("/processLoanAmortization")
	public String loanAcceptance(@Valid @ModelAttribute("loanAmor") Amortization loanAmor, BindingResult result,
			Model model, HttpSession session) {

		if (result.hasErrors()) {

			return "loan-amortization";
		}
		LoanStatus ls = (LoanStatus) session.getAttribute("ls");
		AcceptLoan lAcc = (AcceptLoan) session.getAttribute("ac");
		System.out.println(lAcc.getLoanId());

		Long loanNumber = loanAcceptService.updateAndAdd(ls, lAcc, loanAmor);
		Long applicationNo = ls.getLoan().getLoanId();

		String number = "+91" + ls.getLoan().getBorrower().getBorrowerContactNo();
		String message = "Loan Application Accepted for application number - " + applicationNo + " \n "
				+ " Generated Loan Number is - " + loanNumber;
		String email = ls.getLoan().getBorrower().getBorrowerEmail();
		String subject = "Loan Number Generated"; 
		
		SmsRequest smsRequest = new SmsRequest(number, message, email);

		smsService.sendSms(smsRequest);
		mailSender.sendMail(smsRequest, subject);
		
		session.removeAttribute("ls");
		session.removeAttribute("lAcc");

		model.addAttribute("loanNumber", loanNumber);
		return "loan-generation-confirmation";

	}

	@GetMapping("/rejectLoan")
	public String rejectPendingLoan(@RequestParam String id, Model model, HttpSession session) {
		Long statusId = Long.parseLong(id);
		session.setAttribute("id", statusId);
		return "reject-confirm";
	}

	@PostMapping("/rejectConfirm")
	public String confirmRejectPendingLoan(Model model, HttpSession session) {

		Long loanId = (Long) session.getAttribute("id");
		loanAcceptService.rejectLoan(loanId);
		return "redirect:/manager/seePendingList";
	}
	@GetMapping("/loanDetails")
	public String loanDetailsList(Model model) {
		
		List<LoanAmortization> listLoan = loanAcceptService.getAllLoan();
		model.addAttribute("listLoan", listLoan);
		return "loan-list";
	}
	
	@GetMapping("/viewPaymentDetails")
	public String payementDetails(@RequestParam String loanNumber, Model model, HttpSession session) {
		
		Long statusId = Long.parseLong(loanNumber);
		
		loanAcceptService.findLoanById(loanNumber);
		
		return "";
	}
}










